Exercise: Refactor to Custom Asserts 
---------------------------------------------------------------------

Refactoring
---------------------------------------------------------------------
Bauen Sie den gegebenen Test "testTree()" in der Klasse 
"TreeTest" mittels Delegated Fixture Setup (create Method) und 
Custom Asserts so um, dass sich die @Test Methode auf den gegebenen 
Code reduziert.

Vorher:
	@Test
	public void testTree()
	{
		Assert.assertEquals(11, tree.getId());
		Assert.assertEquals(2, tree.getNodes().size());
		
		Assert.assertEquals(4, tree.getNodes().get(0).getId());
		Assert.assertEquals(2, tree.getNodes().get(0).getNodes().size());
		Assert.assertEquals(5, tree.getNodes().get(0).getNodes().get(0).getId());
		Assert.assertEquals(1, tree.getNodes().get(0).getNodes().get(1).getId());
		Assert.assertEquals(2, tree.getNodes().get(0).getNodes().get(1).getNodes().size());
		Assert.assertEquals(2, tree.getNodes().get(0).getNodes().get(1).getNodes().get(0).getId());
		Assert.assertEquals(3, tree.getNodes().get(0).getNodes().get(1).getNodes().get(1).getId());
	
		Assert.assertEquals(9, tree.getNodes().get(1).getId());
		Assert.assertEquals(2, tree.getNodes().get(1).getNodes().size());
		Assert.assertEquals(6, tree.getNodes().get(1).getNodes().get(0).getId());
		Assert.assertEquals(2, tree.getNodes().get(1).getNodes().get(0).getNodes().size());
		Assert.assertEquals(7, tree.getNodes().get(1).getNodes().get(0).getNodes().get(0).getId());
		Assert.assertEquals(8, tree.getNodes().get(1).getNodes().get(0).getNodes().get(1).getId());
		Assert.assertEquals(10, tree.getNodes().get(1).getNodes().get(1).getId());
	}

Nachher:
	@Test
	public void testTree()
	{
		Node expected = createExpectedTree();
		
		assertEquals(expected, tree);
	}
	
Tipp: Sie können mit dem Befehl "instanceof" den konkreten Typ eines
Objects überprüfen, z.B.: expected instanceof File

Tipp: Ändern Sie die Werte in der tree Objekt-Struktur um zu überprüfen, 
ob alle Objekte verglichen werden!
